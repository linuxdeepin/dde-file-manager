/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i ../partman/partitionmanager.h -c PartitionManagerAdaptor -l PartitionManager -a dbusadaptor/partitionmanager_adaptor partitionmanager.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef PARTITIONMANAGER_ADAPTOR_H
#define PARTITIONMANAGER_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "../partman/partitionmanager.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.filemanager.daemon.PartitionManager
 */
class PartitionManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.filemanager.daemon.PartitionManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.filemanager.daemon.PartitionManager\">\n"
"    <method name=\"mkfs\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"fstype\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"label\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"result\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    PartitionManagerAdaptor(PartitionManager *parent);
    virtual ~PartitionManagerAdaptor();

    inline PartitionManager *parent() const
    { return static_cast<PartitionManager *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    bool mkfs(const QString &path, const QString &fstype, const QString &label);
Q_SIGNALS: // SIGNALS
};

#endif
