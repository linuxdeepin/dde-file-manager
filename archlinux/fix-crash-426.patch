From fe5bed4229e17692315f02885183efc232f66da4 Mon Sep 17 00:00:00 2001
From: rensilin <rensilin@baidu.com>
Date: Thu, 3 Mar 2022 00:43:57 +0800
Subject: [PATCH] =?UTF-8?q?fix:=20Crash=20=E9=9D=99=E6=80=81=E5=8F=98?=
 =?UTF-8?q?=E9=87=8F=E5=88=9D=E5=A7=8B=E5=8C=96=E9=A1=BA=E5=BA=8F=E9=97=AE?=
 =?UTF-8?q?=E9=A2=98=EF=BC=8C=E5=AF=BC=E8=87=B4Release=E7=BC=96=E8=AF=91?=
 =?UTF-8?q?=E4=BA=A7=E5=87=BA=E4=BC=9A=E5=9C=A8=E5=90=AF=E5=8A=A8=E6=97=B6?=
 =?UTF-8?q?Crash?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../interfaces/dfmeventdispatcher.cpp         | 26 ++++++++++++-------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/src/dde-file-manager-lib/interfaces/dfmeventdispatcher.cpp b/src/dde-file-manager-lib/interfaces/dfmeventdispatcher.cpp
index b6f62e98a..078205148 100644
--- a/src/dde-file-manager-lib/interfaces/dfmeventdispatcher.cpp
+++ b/src/dde-file-manager-lib/interfaces/dfmeventdispatcher.cpp
@@ -126,8 +126,14 @@ void DFMEventFuture::operator =(const DFMEventFuture &other)
 }
 
 namespace DFMEventDispatcherData {
-static QList<DFMAbstractEventHandler *> eventHandler;
-static QList<DFMAbstractEventHandler *> eventFilter;
+QList<DFMAbstractEventHandler *>& eventHandler() {
+    static QList<DFMAbstractEventHandler *> handler;
+    return handler;
+}
+QList<DFMAbstractEventHandler *>& eventFilter() {
+    static QList<DFMAbstractEventHandler *> handler;
+    return handler;
+}
 
 Q_GLOBAL_STATIC(QThreadPool, threadPool)
 }
@@ -154,7 +160,7 @@ QVariant DFMEventDispatcher::processEvent(const QSharedPointer<DFMEvent> &event,
 
     QVariant result;
 
-    for (DFMAbstractEventHandler *handler : DFMEventDispatcherData::eventFilter) {
+    for (DFMAbstractEventHandler *handler : DFMEventDispatcherData::eventFilter()) {
         if (!handler)
             continue;
         if (handler->fmEventFilter(event, target, &result))
@@ -164,7 +170,7 @@ QVariant DFMEventDispatcher::processEvent(const QSharedPointer<DFMEvent> &event,
     if (target) {
         target->fmEvent(event, &result);
     } else {
-        for (DFMAbstractEventHandler *handler : DFMEventDispatcherData::eventHandler) {
+        for (DFMAbstractEventHandler *handler : DFMEventDispatcherData::eventHandler()) {
             if (handler->fmEvent(event, &result))
                 return result;
         }
@@ -197,14 +203,14 @@ QVariant DFMEventDispatcher::processEventWithEventLoop(const QSharedPointer<DFME
 
 void DFMEventDispatcher::installEventFilter(DFMAbstractEventHandler *handler)
 {
-    if (!DFMEventDispatcherData::eventFilter.contains(handler)) {
-        DFMEventDispatcherData::eventFilter.append(handler);
+    if (!DFMEventDispatcherData::eventFilter().contains(handler)) {
+        DFMEventDispatcherData::eventFilter().append(handler);
     }
 }
 
 void DFMEventDispatcher::removeEventFilter(DFMAbstractEventHandler *handler)
 {
-    DFMEventDispatcherData::eventFilter.removeOne(handler);
+    DFMEventDispatcherData::eventFilter().removeOne(handler);
 }
 
 DFMEventDispatcher::State DFMEventDispatcher::state() const
@@ -222,13 +228,13 @@ DFMEventDispatcher::DFMEventDispatcher()
 
 void DFMEventDispatcher::installEventHandler(DFMAbstractEventHandler *handler)
 {
-    if (!DFMEventDispatcherData::eventHandler.contains(handler))
-        DFMEventDispatcherData::eventHandler.append(handler);
+    if (!DFMEventDispatcherData::eventHandler().contains(handler))
+        DFMEventDispatcherData::eventHandler().append(handler);
 }
 
 void DFMEventDispatcher::removeEventHandler(DFMAbstractEventHandler *handler)
 {
-    DFMEventDispatcherData::eventHandler.removeOne(handler);
+    DFMEventDispatcherData::eventHandler().removeOne(handler);
 }
 
 DFM_END_NAMESPACE
