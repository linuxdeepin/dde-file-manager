/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i ./accesscontroldbus.h -c AccessControlManagerAdaptor -l AccessControlDBus -a dbusadaptor/accesscontrolmanager_adaptor accesscontroldbus.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ACCESSCONTROLMANAGER_ADAPTOR_H
#define ACCESSCONTROLMANAGER_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./accesscontroldbus.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.filemanager.daemon.AccessControlManager
 */
class AccessControlManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.filemanager.daemon.AccessControlManager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.filemanager.daemon.AccessControlManager\">\n"
"    <signal name=\"AccessPolicySetFinished\">\n"
"      <arg direction=\"out\" type=\"a{sv}\" name=\"policy\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"    </signal>\n"
"    <signal name=\"DeviceAccessPolicyChanged\">\n"
"      <arg direction=\"out\" type=\"av\" name=\"policy\"/>\n"
"    </signal>\n"
"    <signal name=\"AccessVaultPolicyNotify\"/>\n"
"    <signal name=\"DiskPasswordChecked\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"code\"/>\n"
"    </signal>\n"
"    <signal name=\"DiskPasswordChanged\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"code\"/>\n"
"    </signal>\n"
"    <method name=\"SetAccessPolicy\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"a{sv}\" name=\"policy\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <method name=\"QueryAccessPolicy\">\n"
"      <arg direction=\"out\" type=\"av\"/>\n"
"    </method>\n"
"    <method name=\"SetVaultAccessPolicy\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"a{sv}\" name=\"policy\"/>\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <method name=\"QueryVaultAccessPolicy\">\n"
"      <arg direction=\"out\" type=\"av\"/>\n"
"    </method>\n"
"    <method name=\"QueryVaultAccessPolicyVisible\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"FileManagerReply\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"policystate\"/>\n"
"    </method>\n"
"    <method name=\"ChangeDiskPassword\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"oldPwd\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"newPwd\"/>\n"
"    </method>\n"
"    <method name=\"Chmod\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"path\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"mode\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    AccessControlManagerAdaptor(AccessControlDBus *parent);
    virtual ~AccessControlManagerAdaptor();

    inline AccessControlDBus *parent() const
    { return static_cast<AccessControlDBus *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void ChangeDiskPassword(const QString &oldPwd, const QString &newPwd);
    bool Chmod(const QString &path, uint mode);
    QString FileManagerReply(int policystate);
    QVariantList QueryAccessPolicy();
    QVariantList QueryVaultAccessPolicy();
    int QueryVaultAccessPolicyVisible();
    QString SetAccessPolicy(const QVariantMap &policy);
    QString SetVaultAccessPolicy(const QVariantMap &policy);
Q_SIGNALS: // SIGNALS
    void AccessPolicySetFinished(const QVariantMap &policy);
    void AccessVaultPolicyNotify();
    void DeviceAccessPolicyChanged(const QVariantList &policy);
    void DiskPasswordChanged(int code);
    void DiskPasswordChecked(int code);
};

#endif
