// SPDX-FileCopyrightText: 2017 ~ 2019 UnionTech Software Technology Co., Ltd.
//
// SPDX-License-Identifier: CC-BY-4.0

/*
 * TODO: 使用 doxygen 生成文档以便复用 markdown 文档。
 */

/*!
    \page context-menu-ext-zh.html
    \title Context Menu Extension (zh)

    知识库 - 编写上下文菜单扩展

    \section1 上下文菜单

    在大多应用软件程序中，在特定位置按下上下文菜单按键（通常是鼠标右键）即可触发对应语义的上下文菜单。
    在深度文件管理器中，在文件浏览视图位置的不同情况下，如在文件上、在文件夹上、或者是在空白位置
    按下上下文菜单键都会触发不同内容的上下文菜单。

    通常情况，空白位置的上下文菜单会呈现创建文件或是对当前路径进行的其他常见操作，而在文件上触发上下文菜单
    则会呈现可对文件进行的若干处理选项，如打开方式、剪切等内容。

    尽管默认的呈现内容应当涵盖了大部分的使用场景，用户或应用程序可能依然希望呈现额外的上下文菜单以便辅助使用。
    本文即覆盖了编写自己的上下文菜单扩展的须知内容。

    \section1 深度文件管理器的上下文菜单扩展支持

    深度文件管理器目前提供多种形式的上下文菜单扩展支持，为 desktop 格式的上下文菜单扩展支持、 json 格式的扩展支持和
    C++ 插件形式的上下文菜单扩展插件。
    
    在 v20 以上版本的文件管理器（版本号高于 5.0.0）中，我们提供了 desktop 格式形式的上下文菜单扩展支持和 C++ 插件形式的上下文菜单支持，
    在 v15 版本中，文件管理器提供了 json 文件形式的扩展支持和 C++ 插件形式的上下文菜单支持，为了方便用户和开发者，我们还
    提供了适用于 v15 版本文件管理器的 desktop 格式形式的扩展支持插件。请根据您的实际需求选择对应的方案，配置方法参见下方的详细描述。

    需要注意的是，如果您希望为您的应用程序能够出现在 “打开方式” 的应用列表中，您应当考虑为您的应用程序编写适当的
    .desktop 文件并指定对应的 MimeType 文件（请参见 \l {https://www.freedesktop.org/wiki/Specifications/desktop-entry-spec/} {desktop-entry-spec}）。
    如果您希望您的自定义文件类型能够出现在 “新建文档” 的列表中，您应当参阅 \l {New File Templates (zh)} {新建文件模板} 。
    对于上述的这两种需求情况，使用上下文菜单扩展都不是恰当的选择。
    
    \section2 desktop 格式形式的上下文菜单扩展
    
    适用版本：适用于 v20 版本（即版本 > 5.0.0 ）的深度文件管理器，或安装了 desktop 格式形式的上下文菜单扩展插件（在 Deepin 中包名为 dde-file-manager-menu-oem）的 v15 版本文件管理器。
    
    文件管理器会识别指定目录（ `/usr/share/deepin/dde-file-manager/oem-menuextensions` ）下的 `.desktop` 文件，并将其视为扩展菜单项，加入到文件管理器的上下文菜单中。
    开发者或用户仅需按照正确的格式编写 desktop 文件并放置于对应目录即可使用。
    
    每个有效的 desktop 格式形式的上下文菜单扩展均为一个独立的 Application 类型的 `.desktop` 文件。对于每个文件，在其 `[Desktop Entry]` 下至少需要包含 `Name` 和 `Exec` 字段，
    `Name` 的内容为添加到上下文菜单中时将会显示的名称，`Exec` 的内容为当单击此新增的菜单项时将会执行的行为（遵循 desktop 文件规范标准，可以使用 `%u` 等参数）。
    
    定制菜单支持使用 `Actions` 字段增加指定的子菜单，子菜单需至少包含 `Name` 和 `Exec` 字段，可以通过 `Icon` 指定图标。
    若指定子菜单，则入口项（原本 `[Desktop Entry]` 下）的 `Exec` 字段将不再有效。

    对于文件管理器菜单项定制，支持额外的字段可供定制，可以使用 `X-DFM-MenuTypes` 字段来指定菜单项在何种情况会显示，此字段可包含一个或多个类型，
    其中包括 `SingleFile`, `SingleDir`, `MultiFileDirs` 和 `EmptyArea` 四种。
    
    对于此种类型的配置详细规则，请参阅：\l {https://github.com/linuxdeepin/dde-file-manager/blob/master/doc/PLUGIN-README.md} {项目源码仓库中所附带的 PLUGIN-README.md}
    
    \section3 示例扩展
    
    可以将下面的示例存储为 `test.desktop` 并放置到 `/usr/share/deepin/dde-file-manager/oem-menuextensions/` 中，关闭现有的所有文件管理器窗口并打开新的文件管理器窗口，定制的菜单将会出现在单独目录或多选文件的情况的上下文菜单中。
    
    \code
[Desktop Entry]
Type=Application
Exec=/home/wzc/Temp/test.sh %U
Icon=utilities-terminal
Name=示例菜单项名称
X-DFM-MenuTypes=SingleDir;MultiFileDirs;
    \endcode

    \section2 Json 形式的上下文菜单扩展
    
    适用版本：仅适用于 v15 版本，即版本 <= 5.0.0 的深度文件管理器。
    
    注意：如果您计划在将来升级到 v20 版本的文件管理器，请考虑安装由我们提供的适用于 v15 版本的 desktop 格式形式的扩展支持插件，并使用 desktop 格式形式的扩展支持。

    默认情况下文件管理器会在开启时试图加载 `~/.config/deepin/dde-file-manager/menuextensions/` 目录
    （如需要编写此类扩展但发现此路径不存在时，手动创建完整路径即可）中的 json 文件作为上下文菜单扩展，
    对于一个上下文菜单扩展，应当包含有如下的通用字段。

    \section3 通用字段

    支持扩展的右键菜单各个字段说明：

    \list
        \li MenuType 菜单类型（必须指定）
            \list
                \li SingleFile 选中单个文件
                \li MultiFiles 选中多个文件
                \li SingleDir 选中单个目录
                \li MultiDirs 选中多个目录
                \li MultiFileDirs 选中多个文件和目录
                \li EmptyArea 空白区域
            \endlist
        \li Icon 菜单项的指定图标（可选）
            \list
                \li Icon: /home/djf/Music/usb_normal_16px.svg
            \endlist
        \li Text[local] 根据不同的语言环境给出不同的菜单文本（必须指定）
            \list
                \li Text[zh_CN]: 示例文本
                \li Text[en]: Sample Text
                \li ...
            \endlist
        \li Exec 点击菜单项执行的命令（必须指定）
            \list
                \li Exec: xterm 启动 XTerm 。注意此项只能跟一个名称，不能包含参数。
            \endlist
        \li Args 执行命令的额外参数列表
            \list
                \li "Args": ["."] 为执行 Exec 内容指定额外的一个参数（"."）。
            \endlist
        \li NotShowIn 在什么情况下不显示
            \list
                \li "NotShowIn": ["Desktop"] 在桌面上不显示此菜单。
            \endlist
        \li SubMenu 子菜单列表，子菜单列表不需要再次指定 MenuType 字段，其他字段参数一样，支持 SubMenu 中嵌套无限
    \endlist

    如果 MenuType 为 SingleFile 或者 MultiFiles ，可以增加下面两个字段来细化菜单控制。

    \list
        \li MimeType 文件的MimeType类型，如果指定了这个参数，表示只拓展这个类型的文件右键菜单；以;隔开
            \list
                \li MimeType:text/plain;image/jpeg
            \endlist
        \li Suffix　文件的后缀，如果指定了这个参数，表示只拓展后缀名为指定后缀的文件的右键菜单；以;隔开
            \list
                \li Suffix: md;txt
            \endlist
        \li 如果MimeType和Suffix两个参数同时指定，表示文件类型为MimeType且后缀名为Suffix的文件才支持扩展右键菜单
    \endlist

    \section3 示例扩展

    下面的示例为 在文件管理器的空白区域触发上下文菜单，增加 “在 VSCode 中打开” 选项 的示例。

    \code
    [
        {
            "MenuType": "EmptyArea",
            "Icon": "Files",
            "Text[zh_CN]": "在 VSCode 中打开",
            "Text[en_US]": "Open with VSCode",
            "Exec": "code",
            "Args": ["."],
            "NotShowIn": ["Desktop"],
        }
    ]
    \endcode

    下面为旧文档中所附带的示例。

    \quotefile context-menu-ext.json

    \section2 遵守 Qt 插件规范的 C++ 上下文菜单插件
    
    注意：接口可能在将来废弃或调整，尽管适用于 v15 和 v20 版本，但仍不推荐使用。

    文件管理器支持加载 Qt 规范的 C++ 插件，实现需继承 MenuInterface ，遵守 Qt 的插件规范实现你的菜单插件接口。

    \section3 插件头文件

    在安装好 libdde-file-manager-dev （文件管理器开发包）后即可得到对应的插件头文件 menuinterface.h ，使用时需在对应的代码中包含此文件。

    \code
        #include "dde-file-manager-plugins/menuinterface.h"
    \endcode

    \section3 接口说明

    \list
        \li virtual QList<QAction*> additionalMenu(const QStringList &files, const QString& currentDir)　实现这个接口可以扩展选中文件的右键菜单
            \list
                \li const QStringList &files 表示选中的文件的完整路径列表
                \li const QString& currentDir 表示选中的文件所在的目录
                \li QList<QAction*> 返回一组QAction指针列表
            \endlist
        \li virtual QList<QAction*> additionalEmptyMenu(const QString &currentDir, bool onDesktop = false)　实现这个接口可以扩展空白处的右键菜单
            \list
                \li const QString& currentDir　表示空白处所在的文件目录
                \li const QString& currentDir　表示空白处所在的文件目录
                \li QList<QAction*> 返回一组QAction指针列表
            \endlist
    \endlist

    \section3 插件安装目录

    在 Deepin 上，安装位置为 `/usr/lib/<target_arch>/dde-file-manager/plugins/menu/` ，其中 <target_arch> 表示对应架构名，可以通过 `gcc -dumpmachine` 得到。下表供参考：

    \list
        \li x86 架构
            \list
                \li /usr/lib/x86_64-linux-gnu/dde-file-manager/plugins/menu/ 64位
                \li /usr/lib/x86_32-linux-gnu/dde-file-manager/plugins/menu/ 32位
            \endlist
        \li 龙芯架构
            \list
                \li /usr/lib/mipsel-linux-gnu/dde-file-manager/plugins/menu/
            \endlist
        \li 神威架构
            \list
                \li /usr/lib/sw_64-linux-gnu/dde-file-manager/plugins/menu/
            \endlist
    \endlist

    \section3 源码

    对于接口头文件的源码，可以直接参阅开发包所附带的头文件。以下为可供参考的简单右键菜单扩展插件实例源码。

    context-menu-ext/content-menu-ext.pro:

    \quotefile context-menu-ext/content-menu-ext.pro

    context-menu-ext/dfmctxmenuplugin.h:

    \quotefile context-menu-ext/dfmctxmenuplugin.h

    context-menu-ext/dfmctxmenuplugin.cpp:

    \quotefile context-menu-ext/dfmctxmenuplugin.cpp

    \section1 参考链接

    \list
        \li \l {https://github.com/linuxdeepin/dde-file-manager/issues/21} {How to add entry to context menu?}
    \endlist
*/
